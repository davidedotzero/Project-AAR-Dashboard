import React from 'react';
// ‡πÇ‡∏õ‡∏£‡∏î‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Path ‡∏Å‡∏≤‡∏£ Import ‡πÉ‡∏´‡πâ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏ï‡∏≤‡∏°‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡∏Å‡∏ï‡πå‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì
import { useAuth } from '@/contexts/AuthContext';
import { useData } from '@/contexts/DataContext';
import { PerformanceDashboard } from '@/pages/Dashboard/PerformanceDashboard';

// Icons (‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÄ‡∏î‡∏¥‡∏°)
const UserIcon = () => (
    <svg xmlns="http://www.w3.org/2000/svg" width="48" height="48" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="1.5" strokeLinecap="round" strokeLinejoin="round">
        <path d="M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2"></path>
        <circle cx="12" cy="7" r="4"></circle>
    </svg>
);
const LogoutIcon = () => (
    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round">
        <path d="M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4"></path>
        <polyline points="16 17 21 12 16 7"></polyline>
        <line x1="21" y1="12" x2="9" y2="12"></line>
    </svg>
);


export const ProfileTab: React.FC = () => {
  const { user, logout } = useAuth();
  // [‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï] ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Metrics ‡πÉ‡∏´‡∏°‡πà‡∏à‡∏≤‡∏Å DataContext
  const {
    // operationScore, // ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πâ‡πÅ‡∏•‡πâ‡∏ß
    // efficiencyRatio, // ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πâ‡πÅ‡∏•‡πâ‡∏ß
    // onTimePerformance, // ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πâ‡πÅ‡∏•‡πâ‡∏ß
    
    // üëá ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÉ‡∏´‡∏°‡πà üëá
    totalCompletedTasks,
    totalImpactDelivered,
    workInProgressCount,
    overdueTaskCount,

    globalTasksByStatus,
    globalTasksByOwner,
    isLoadingAllTasks,
  } = useData();

  if (!user) {
    return (
      <div className="p-8 text-center text-gray-500">
        No user is currently logged in. Please refresh the page.
      </div>
    );
  }

  return (
    // [‡∏õ‡∏£‡∏±‡∏ö‡πÅ‡∏Å‡πâ] 1. ‡∏™‡∏£‡πâ‡∏≤‡∏á Layout ‡∏´‡∏•‡∏±‡∏Å‡∏î‡πâ‡∏ß‡∏¢ Flexbox
    // - flex-col: ‡∏à‡∏±‡∏î‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡πÅ‡∏ô‡∏ß‡∏ï‡∏±‡πâ‡∏á‡∏ö‡∏ô‡∏à‡∏≠‡∏°‡∏∑‡∏≠‡∏ñ‡∏∑‡∏≠
    // - lg:flex-row: ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡πÅ‡∏ô‡∏ß‡∏ô‡∏≠‡∏ô‡∏ö‡∏ô‡∏à‡∏≠‡πÉ‡∏´‡∏ç‡πà (lg breakpoint ‡∏Ç‡∏∂‡πâ‡∏ô‡πÑ‡∏õ)
    // - gap-8: ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ä‡πà‡∏≠‡∏á‡∏ß‡πà‡∏≤‡∏á‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á Sidebar ‡πÅ‡∏•‡∏∞ Content
    <div className="flex flex-col lg:flex-row gap-8 pt-8">
      
      {/* ‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà 1: User Profile Sidebar */}
      {/* [‡∏õ‡∏£‡∏±‡∏ö‡πÅ‡∏Å‡πâ] 2. ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ç‡∏ô‡∏≤‡∏î‡πÉ‡∏´‡πâ Sidebar */}
      {/* - w-full: ‡πÄ‡∏ï‡πá‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏ß‡πâ‡∏≤‡∏á‡∏ö‡∏ô‡∏à‡∏≠‡∏°‡∏∑‡∏≠‡∏ñ‡∏∑‡∏≠ */}
      {/* - lg:w-80: ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏ß‡πâ‡∏≤‡∏á‡∏Ñ‡∏á‡∏ó‡∏µ‡πà 80 ‡∏´‡∏ô‡πà‡∏ß‡∏¢ (320px) ‡∏ö‡∏ô‡∏à‡∏≠‡πÉ‡∏´‡∏ç‡πà */}
      {/* - flex-shrink-0: ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ Sidebar ‡∏´‡∏î‡∏ï‡∏±‡∏ß‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏à‡∏≠‡πÅ‡∏Ñ‡∏ö‡∏•‡∏á */}
      <aside className="w-full lg:w-80 flex-shrink-0">
        <div className="bg-white p-8 rounded-xl shadow-sm border border-gray-200 h-full">
            <div className="flex flex-col items-center text-center">
                <div className="w-24 h-24 mb-4 rounded-full bg-orange-100 flex items-center justify-center text-orange-500">
                    <UserIcon />
                </div>
                <h2 className="text-2xl font-bold text-gray-800">{user.name}</h2>
                <p className="text-md text-gray-500">{user.email}</p>
                <span className="mt-2 px-3 py-1 text-sm font-semibold text-green-800 bg-green-100 rounded-full capitalize">{user.role}</span>
            </div>
            
            <div className="mt-8 pt-6 border-t border-gray-200">
                <button
                    onClick={logout}
                    className="w-full flex items-center justify-center px-4 py-3 bg-red-500 text-white font-semibold rounded-lg hover:bg-red-600 transition-colors duration-200 shadow-sm focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500"
                >
                    <LogoutIcon />
                    <span className="ml-2">Logout</span>
                </button>
            </div>
        </div>
      </aside>

      {/* ‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà 2: Team Performance Dashboard (Main Content) */}
      {/* [‡∏õ‡∏£‡∏±‡∏ö‡πÅ‡∏Å‡πâ] 3. ‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏™‡πà‡∏ß‡∏ô‡∏ô‡∏µ‡πâ‡∏¢‡∏∑‡∏î‡πÄ‡∏ï‡πá‡∏°‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠ */}
      {/* - flex-1: ‡∏ó‡∏≥‡πÉ‡∏´‡πâ div ‡∏ô‡∏µ‡πâ‡∏Ç‡∏¢‡∏≤‡∏¢‡πÄ‡∏ï‡πá‡∏°‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÉ‡∏ô Flex container */}
      <main className="flex-1">
        <h2 className="text-2xl font-bold text-gray-800 mb-6">‡∏†‡∏≤‡∏û‡∏£‡∏ß‡∏°‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡∏° (‡∏ó‡∏∏‡∏Å‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡∏Å‡∏ï‡πå)</h2>
        
        {isLoadingAllTasks ? (
          <div className="p-8 text-center text-gray-500 bg-white rounded-xl shadow-sm border">
            ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡∏°...
          </div>
        ) : (
          <PerformanceDashboard
            totalCompletedTasks={totalCompletedTasks}
            totalImpactDelivered={totalImpactDelivered}
            workInProgressCount={workInProgressCount}
            overdueTaskCount={overdueTaskCount}
            tasksByStatus={globalTasksByStatus}
            tasksByOwner={globalTasksByOwner}
          />
        )}
      </main>
    </div>
  );
};